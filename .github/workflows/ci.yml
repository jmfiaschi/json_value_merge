---
name: ci

on: push

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo clean
      - run: cargo build
  unit-tests:
    needs: [build,lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo test --doc -- --test-threads=1
      - run: cargo test --lib -- --test-threads=1
  integration-tests:
    needs: [build,lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo test --tests -- --test-threads=1
  benchmark:
    needs: [build,lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nelonoel/branch-name@v1.0.1
      - uses: actions-rs/toolchain@v1
        with:

          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo install cargo-criterion
      - name: Generate benchmark
        run: cargo criterion --output-format bencher --plotting-backend disabled 2>&1 | tee output.txt
      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@jmfiaschi'
          benchmark-data-dir-path: 'docs/bench/${{ env.BRANCH_NAME }}'
  release:
    needs: [benchmark,integration-tests,unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Semantic Release
        run: |
          sudo npm install semantic-release -g
          sudo npm install @semantic-release/changelog -g
          sudo npm install @semantic-release/git -g
          sudo npm install @semantic-release/github -g
          sudo npm install @semantic-release/exec -g
          cargo install semantic-release-rust --version 1.0.0-alpha.8
      - name: Run Semantic Release
        run: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
